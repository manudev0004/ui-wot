{"version":3,"names":["uiNumberPickerCss","UiNumberPicker","variant","state","theme","color","label","tdUrl","value","onChange","protocol","mqttHost","mqttTopic","mode","min","max","step","currentValue","valueChange","watchTdUrl","this","readDeviceState","undefined","componentWillLoad","console","log","readDeviceStateHttp","readDeviceStateCoap","readDeviceStateMqtt","error","warn","response","fetch","ok","json","numberValue","Number","url","URL","host","pathname","method","wsUrl","ws","WebSocket","onopen","subscribeMsg","cmd","topic","send","JSON","stringify","onmessage","event","data","parse","payload","updateDevice","updateDeviceHttp","updateDeviceCoap","updateDeviceMqtt","headers","body","Error","status","publishMsg","close","onerror","handleIncrement","async","newValue","emitChange","handleDecrement","emit","window","handleKeyDown","key","preventDefault","getButtonStyle","type","isDisabled","isAtMax","isAtMin","disabled","baseClasses","borderColor","getColorName","hoverBg","getValueStyle","classes","render","isReadOnly","hoverTitle","containerClasses","h","class","title","tabindex","onKeyDown","onClick","uiSliderCss","UiSlider","thumbShape","enableManualControl","manualInputValue","readDevice","watchValue","String","num","isNaN","Math","writeDevice","handleChange","target","catch","handleManualInput","handleManualSubmit","clampedValue","getTrackStyle","percentage","height","bgColor","progressColor","getActiveColor","getNeonColor","track","progress","progressWidth","getThumbStyle","size","shape","border","renderStepMarks","steps","stepCount","i","push","style","left","renderCustomThumb","includes","thumbColor","strokeColor","width","viewBox","d","fill","stroke","trackStyles","thumbStyle","role","onInput","e","onSubmit","placeholder","uiToggleCss","UiToggle","isActive","toggle","boolValue","parseValue","lowerValue","toLowerCase","booleanValue","Boolean","handleToggle","newActive","active","getToggleStyle","base","trim","baseStyle","movement","position","showCrossIcons","toggleStyle"],"sources":["src/components/ui-number-picker/ui-number-picker.css?tag=ui-number-picker&encapsulation=shadow","src/components/ui-number-picker/ui-number-picker.tsx","src/components/ui-slider/ui-slider.css?tag=ui-slider&encapsulation=shadow","src/components/ui-slider/ui-slider.tsx","src/components/ui-toggle/ui-toggle.css?tag=ui-toggle&encapsulation=shadow","src/components/ui-toggle/ui-toggle.tsx"],"sourcesContent":["/* Import Josefin Sans font */\n@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100..700;1,100..700&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/**\n * UI Number Picker Component Styles\n */\n\n:host {\n  /* Custom color scheme to match ThingsWeb  */\n  --color-neutral: #7E807F;\n  --color-neutral-light: #CACCCC;\n  --color-neutral-dark: #4C4D4C;\n  --color-white: #FFFFFF;\n  --color-primary: #067362;\n  --color-primary-dark: #33b8a4;\n  --color-secondary: #B84A91;\n  \n  display: inline-block;\n  font-family: 'Josefin Sans', sans-serif;\n}\n\n/* Custom color utilities using CSS variables */\n.bg-neutral-light { background-color: var(--color-neutral-light); }\n.bg-neutral { background-color: var(--color-neutral); }\n.bg-neutral-dark { background-color: var(--color-neutral-dark); }\n.bg-primary { background-color: var(--color-primary); }\n.bg-primary-dark { background-color: var(--color-primary-dark); }\n.bg-secondary { background-color: var(--color-secondary); }\n\n.text-neutral { color: var(--color-neutral); }\n.text-primary { color: var(--color-primary); }\n.text-secondary { color: var(--color-secondary); }\n\n.border-primary { border-color: var(--color-primary); }\n.border-secondary { border-color: var(--color-secondary); }\n.border-neutral { border-color: var(--color-neutral); }\n\n/* Dark mode text and border colors */\n.dark .text-primary { color: var(--color-primary-dark); }\n.dark .border-primary { border-color: var(--color-primary-dark); }\n.dark .text-secondary { color: var(--color-secondary); }\n.dark .border-secondary { border-color: var(--color-secondary); }\n.dark .text-neutral { color: var(--color-neutral); }\n.dark .border-neutral { border-color: var(--color-neutral); }\n\n.focus\\:ring-primary:focus { \n  --tw-ring-color: var(--color-primary); \n  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);\n}\n\n.focus\\:ring-secondary:focus { \n  --tw-ring-color: var(--color-secondary); \n  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);\n}\n\n.focus\\:ring-neutral:focus { \n  --tw-ring-color: var(--color-neutral); \n  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);\n}\n\n/* Hover states for colored buttons */\n.hover\\:bg-primary:hover { background-color: var(--color-primary); }\n.hover\\:bg-primary-dark:hover { background-color: var(--color-primary-dark); }\n.hover\\:bg-secondary:hover { background-color: var(--color-secondary); }\n.hover\\:bg-neutral:hover { background-color: var(--color-neutral); }\n\n/* Additional hover and focus utilities */\n.hover\\:text-white:hover { color: white; }\n.focus\\:ring-primary:focus { --tw-ring-color: var(--color-primary); }\n.focus\\:ring-secondary:focus { --tw-ring-color: var(--color-secondary); }\n.focus\\:ring-neutral:focus { --tw-ring-color: var(--color-neutral); }\n\n/* Force white text for filled buttons - highest specificity */\nbutton.text-white-force,\nbutton.text-white-force:hover,\nbutton.text-white-force:active,\nbutton.text-white-force:focus {\n  color: white !important;\n}\n\n/* Force black text in light theme - highest specificity */\nbutton.text-black-force,\nbutton.text-black-force:hover,\nbutton.text-black-force:active,\nbutton.text-black-force:focus {\n  color: black !important;\n}\n\n/* Force white text in dark theme - highest specificity */\nbutton.text-white-dark,\nbutton.text-white-dark:hover,\nbutton.text-white-dark:active,\nbutton.text-white-dark:focus {\n  color: white !important;\n}\n\n/* Extra specificity for filled variant buttons */\n:host(.ui-number-picker) button.text-white-force {\n  color: white !important;\n}\n\n/* Dark mode overrides */\n.dark .bg-neutral-light { background-color: var(--color-neutral-dark); }\n.dark .bg-neutral { background-color: var(--color-neutral); }\n.dark .bg-neutral-dark { background-color: var(--color-neutral-light); }\n.dark .bg-primary { background-color: var(--color-primary-dark); }\n\n/* Button animations */\n.hover\\:scale-105:hover {\n  transform: scale(1.05);\n}\n\n.active\\:scale-95:active {\n  transform: scale(0.95);\n}\n\n/* Disabled state */\nbutton:disabled {\n  cursor: not-allowed !important;\n  transform: none !important;\n}\n\nbutton:disabled:hover {\n  transform: none !important;\n}\n\n/* Smooth transitions */\nbutton {\n  transition: all 0.2s ease-in-out;\n}\n\n/* Focus styles */\nbutton:focus {\n  outline: none;\n  --tw-ring-width: 2px;\n  --tw-ring-offset-width: 2px;\n  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);\n}\n\n/* Number display styles */\n.number-display {\n  font-variant-numeric: tabular-nums;\n  letter-spacing: 0.025em;\n  font-family: 'Josefin Sans', sans-serif;\n}\n\n/* Ensure all elements use Josefin Sans */\nbutton, div, label, span {\n  font-family: 'Josefin Sans', sans-serif;\n}\n","import { Component, Prop, State, h, Watch, Event, EventEmitter } from '@stencil/core';\n\n/**\n * Number picker component with various visual styles, TD integration and customizable range.\n * Supports increment/decrement buttons with Thing Description integration for IoT devices.\n * \n * @example Basic Usage\n * ```html\n * <ui-number-picker variant=\"minimal\" value=\"3\" label=\"Quantity\"></ui-number-picker>\n * ```\n * \n * @example TD Integration with HTTP\n * ```html\n * <ui-number-picker \n *   td-url=\"http://device.local/properties/volume\"\n *   label=\"Device Volume\"\n *   protocol=\"http\"\n *   mode=\"readwrite\"\n *   min=\"0\"\n *   max=\"100\">\n * </ui-number-picker>\n * ```\n * \n * @example TD Integration with MQTT\n * ```html\n * <ui-number-picker \n *   td-url=\"mqtt://device\"\n *   mqtt-host=\"localhost:1883\"\n *   mqtt-topic=\"device/volume\"\n *   label=\"MQTT Volume\"\n *   protocol=\"mqtt\"\n *   mode=\"readwrite\">\n * </ui-number-picker>\n * ```\n * \n * @example TD Device Read-Only (shows value only)\n * ```html\n * <ui-number-picker \n *   td-url=\"http://sensor.local/temperature\"\n *   label=\"Temperature Sensor\"\n *   mode=\"read\">\n * </ui-number-picker>\n * ```\n * \n * @example Local Control with Custom Handler\n * ```html\n * <ui-number-picker \n *   value=\"3\"\n *   on-change=\"handleNumberChange\"\n *   variant=\"filled\"\n *   label=\"Custom Counter\">\n * </ui-number-picker>\n * ```\n * \n * @example Event Handling\n * ```javascript\n * window.handleNumberChange = function(data) {\n *   console.log('Number changed:', data.value);\n *   console.log('Label:', data.label);\n *   // Your custom logic here\n * };\n * ```\n */\n@Component({\n  tag: 'ui-number-picker',\n  styleUrl: 'ui-number-picker.css',\n  shadow: true,\n})\nexport class UiNumberPicker {\n  /**\n   * Visual style variant of the number picker.\n   * - minimal: Clean buttons with subtle background (default)\n   * - outlined: Buttons with border outline\n   * - filled: Solid filled buttons\n   */\n  @Prop() variant: 'minimal' | 'outlined' | 'filled' = 'minimal';\n\n  /**\n   * Current state of the number picker.\n   * - active: Number picker is enabled (default)\n   * - disabled: Number picker cannot be interacted with\n   */\n  @Prop({ mutable: true }) state: 'active' | 'disabled' = 'active';\n\n  /**\n   * Theme for the component.\n   */\n  @Prop() theme: 'light' | 'dark' = 'light';\n\n  /**\n   * Color scheme to match thingsweb webpage \n   */\n  @Prop() color: 'primary' | 'secondary' | 'neutral' = 'primary';\n\n  /**\n   * Optional text label, to display above the number picker.\n   */\n  @Prop() label?: string;\n\n  /**\n   * Direct URL of TD number properties to auto connect and interact with the device.\n   * @example\n   * ```\n   * td-url=\"http://plugfest.thingweb.io:80/http-data-schema-thing/properties/number\"\n   * ```\n   */\n  @Prop() tdUrl?: string;\n\n  /**\n   * Current value of the number picker (for local control mode).\n   * When no td-url is provided and value is set, this controls the picker state.\n   * @example 5, 10, 25\n   */\n  @Prop({ mutable: true }) value: number = 0;\n\n  /**\n   * Function name to call when value changes.\n   * User defines this function in their code, component will invoke it.\n   * @example \"handleNumberChange\"\n   */\n  @Prop() onChange?: string;\n\n  /**\n   * Protocol to use for Thing Description communication.\n   * - http: HTTP REST API (default)\n   * - coap: CoAP protocol  \n   * - mqtt: MQTT protocol\n   */\n  @Prop() protocol: 'http' | 'coap' | 'mqtt' = 'http';\n\n  /**\n   * MQTT broker host for MQTT protocol (e.g., \"localhost:1883\")\n   */\n  @Prop() mqttHost?: string;\n\n  /**\n   * MQTT topic path for MQTT protocol (e.g., \"device/volume\")\n   */\n  @Prop() mqttTopic?: string;\n\n  /**\n   * Device interaction mode.\n   * - read: Only read from device (display current value, no interaction)\n   * - write: Only write to device (control device but don't sync state)\n   * - readwrite: Read and write (full synchronization) - default\n   */\n  @Prop() mode: 'read' | 'write' | 'readwrite' = 'readwrite';\n\n  /**\n   * Minimum allowed value.\n   */\n  @Prop() min?: number = 0;\n\n  /**\n   * Maximum allowed value.\n   */\n  @Prop() max?: number = 100;\n\n  /**\n   * Step increment/decrement amount.\n   */\n  @Prop() step: number = 1;\n\n  /** Internal state tracking current value */\n  @State() currentValue: number = 0;\n\n  /** Event emitted when value changes */\n  @Event() valueChange: EventEmitter<{ value: number; label?: string }>;\n\n  /** Watch for TD URL changes and reconnect */\n  @Watch('tdUrl')\n  @Watch('value')\n  async watchTdUrl() {\n    if (this.tdUrl && (this.mode === 'read' || this.mode === 'readwrite')) {\n      await this.readDeviceState();\n    } else if (!this.tdUrl && this.value !== undefined) {\n      // Handle local value changes\n      this.currentValue = this.value;\n    }\n  }\n\n  /** Initialize component */\n  componentWillLoad() {\n    this.currentValue = this.value;\n    \n    if (this.tdUrl && (this.mode === 'read' || this.mode === 'readwrite')) {\n      this.readDeviceState();\n    } else if (!this.tdUrl && this.value !== undefined) {\n      // Initialize from value prop when no TD URL\n      this.currentValue = this.value;\n    }\n  }\n\n  /** Read current state from device */\n  private async readDeviceState() {\n    if (!this.tdUrl) return;\n\n    try {\n      console.log(`Reading from: ${this.tdUrl} via ${this.protocol}`);\n      \n      if (this.protocol === 'http') {\n        await this.readDeviceStateHttp();\n      } else if (this.protocol === 'coap') {\n        await this.readDeviceStateCoap();\n      } else if (this.protocol === 'mqtt') {\n        await this.readDeviceStateMqtt();\n      }\n    } catch (error) {\n      console.warn('Failed to read state:', error);\n    }\n  }\n\n  /** Read via HTTP */\n  private async readDeviceStateHttp() {\n    const response = await fetch(this.tdUrl);\n    \n    if (response.ok) {\n      const value = await response.json();\n      const numberValue = typeof value === 'number' ? value : Number(value);\n      \n      this.currentValue = numberValue;\n      this.value = numberValue;\n      console.log(`Read value: ${numberValue}`);\n    }\n  }\n\n  /** Read via CoAP */\n  private async readDeviceStateCoap() {\n    try {\n      // Simple CoAP GET request\n      const url = new URL(this.tdUrl);\n      const response = await fetch(`coap://${url.host}${url.pathname}`, {\n        method: 'GET'\n      });\n      const value = await response.json();\n      const numberValue = typeof value === 'number' ? value : Number(value);\n      this.currentValue = numberValue;\n      this.value = numberValue;\n      console.log(`CoAP read value: ${numberValue}`);\n    } catch (error) {\n      console.warn('CoAP read failed:', error);\n      throw error;\n    }\n  }\n\n  /** Read via MQTT */\n  private async readDeviceStateMqtt() {\n    if (!this.mqttHost || !this.mqttTopic) {\n      console.warn('MQTT host and topic are required for MQTT protocol');\n      return;\n    }\n\n    try {\n      // Use WebSocket-based MQTT connection\n      const wsUrl = `ws://${this.mqttHost}/mqtt`;\n      const ws = new WebSocket(wsUrl);\n      \n      ws.onopen = () => {\n        // Subscribe to topic\n        const subscribeMsg = {\n          cmd: 'subscribe',\n          topic: this.mqttTopic\n        };\n        ws.send(JSON.stringify(subscribeMsg));\n      };\n      \n      ws.onmessage = (event) => {\n        const data = JSON.parse(event.data);\n        if (data.topic === this.mqttTopic) {\n          const numberValue = typeof data.payload === 'number' ? data.payload : Number(data.payload);\n          this.currentValue = numberValue;\n          this.value = numberValue;\n          console.log(`MQTT read value: ${numberValue}`);\n        }\n      };\n    } catch (error) {\n      console.warn('MQTT read failed:', error);\n      throw error;\n    }\n  }\n\n  /** Write new state to TD device */\n  private async updateDevice(value: number) {\n    if (!this.tdUrl) return;\n\n    try {\n      console.log(`Writing ${value} to: ${this.tdUrl} via ${this.protocol}`);\n      \n      if (this.protocol === 'http') {\n        await this.updateDeviceHttp(value);\n      } else if (this.protocol === 'coap') {\n        await this.updateDeviceCoap(value);\n      } else if (this.protocol === 'mqtt') {\n        await this.updateDeviceMqtt(value);\n      }\n    } catch (error) {\n      console.warn('Failed to write:', error);\n      throw error;\n    }\n  }\n\n  /** Write via HTTP */\n  private async updateDeviceHttp(value: number) {\n    const response = await fetch(this.tdUrl, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(value),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Write failed: ${response.status}`);\n    }\n    \n    console.log(`Successfully wrote: ${value}`);\n  }\n\n  /** Write via CoAP */\n  private async updateDeviceCoap(value: number) {\n    try {\n      const url = new URL(this.tdUrl);\n      const response = await fetch(`coap://${url.host}${url.pathname}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(value),\n      });\n\n      if (!response.ok) {\n        throw new Error(`CoAP write failed: ${response.status}`);\n      }\n      \n      console.log(`CoAP successfully wrote: ${value}`);\n    } catch (error) {\n      console.warn('CoAP write failed:', error);\n      throw error;\n    }\n  }\n\n  /** Write via MQTT */\n  private async updateDeviceMqtt(value: number) {\n    if (!this.mqttHost || !this.mqttTopic) {\n      console.warn('MQTT host and topic are required for MQTT protocol');\n      throw new Error('MQTT configuration missing');\n    }\n\n    try {\n      // Use WebSocket-based MQTT connection\n      const wsUrl = `ws://${this.mqttHost}/mqtt`;\n      const ws = new WebSocket(wsUrl);\n      \n      ws.onopen = () => {\n        // Publish to topic\n        const publishMsg = {\n          cmd: 'publish',\n          topic: this.mqttTopic,\n          payload: value\n        };\n        ws.send(JSON.stringify(publishMsg));\n        console.log(`MQTT successfully wrote: ${value}`);\n        ws.close();\n      };\n      \n      ws.onerror = (error) => {\n        console.warn('MQTT write failed:', error);\n        throw new Error('MQTT write failed');\n      };\n    } catch (error) {\n      console.warn('MQTT write failed:', error);\n      throw error;\n    }\n  }\n\n  /** Handle increment */\n  private handleIncrement = async () => {\n    if (this.state === 'disabled') return;\n    \n    // Don't allow interaction in read-only mode\n    if (this.mode === 'read') {\n      return;\n    }\n    \n    const newValue = this.currentValue + this.step;\n    if (this.max !== undefined && newValue > this.max) return;\n    \n    this.currentValue = newValue;\n    this.value = newValue;\n    this.emitChange();\n\n    // Update device if connected and write mode is enabled\n    if (this.tdUrl && (this.mode === 'write' || this.mode === 'readwrite')) {\n      try {\n        await this.updateDevice(newValue);\n      } catch (error) {\n        // Revert on failure\n        this.currentValue = this.currentValue - this.step;\n        this.value = this.currentValue;\n        console.warn('Change failed, reverted state');\n        // Emit revert event\n        this.emitChange();\n      }\n    }\n  };\n\n  /** Handle decrement */\n  private handleDecrement = async () => {\n    if (this.state === 'disabled') return;\n    \n    // Don't allow interaction in read-only mode\n    if (this.mode === 'read') {\n      return;\n    }\n    \n    const newValue = this.currentValue - this.step;\n    if (this.min !== undefined && newValue < this.min) return;\n    \n    this.currentValue = newValue;\n    this.value = newValue;\n    this.emitChange();\n\n    // Update device if connected and write mode is enabled\n    if (this.tdUrl && (this.mode === 'write' || this.mode === 'readwrite')) {\n      try {\n        await this.updateDevice(newValue);\n      } catch (error) {\n        // Revert on failure\n        this.currentValue = this.currentValue + this.step;\n        this.value = this.currentValue;\n        console.warn('Change failed, reverted state');\n        // Emit revert event\n        this.emitChange();\n      }\n    }\n  };\n\n  /** Emit value change events */\n  private emitChange() {\n    // Emit value change event for parent to handle\n    this.valueChange.emit({ \n      value: this.currentValue, \n      label: this.label \n    });\n\n    // Call user's callback function if provided\n    if (this.onChange && typeof window[this.onChange] === 'function') {\n      window[this.onChange]({\n        value: this.currentValue,\n        label: this.label\n      });\n    }\n\n    // Update value prop for local control\n    if (!this.tdUrl && this.value !== undefined) {\n      this.value = this.currentValue;\n    }\n  }\n\n  /** Handle keyboard input */\n  private handleKeyDown = (event: KeyboardEvent) => {\n    if (this.state === 'disabled') return;\n    \n    if (event.key === 'ArrowUp') {\n      event.preventDefault();\n      this.handleIncrement();\n    } else if (event.key === 'ArrowDown') {\n      event.preventDefault();\n      this.handleDecrement();\n    }\n  };\n\n  /** Get button style classes */\n  private getButtonStyle(type: 'increment' | 'decrement'): string {\n    const isDisabled = this.state === 'disabled';\n    const isAtMax = this.max !== undefined && this.currentValue >= this.max && type === 'increment';\n    const isAtMin = this.min !== undefined && this.currentValue <= this.min && type === 'decrement';\n    const disabled = isDisabled || isAtMax || isAtMin;\n    \n    let baseClasses = 'w-12 h-12 flex items-center justify-center text-lg font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 rounded-lg';\n    \n    if (disabled) {\n      baseClasses += ' opacity-50 cursor-not-allowed';\n    } else {\n      baseClasses += ' cursor-pointer hover:scale-105 active:scale-95';\n    }\n\n    // Variant-specific styling with explicit color control\n    if (this.variant === 'minimal') {\n      // Minimal: No background, no border, just text\n      if (disabled) {\n        baseClasses += ' text-gray-400';\n      } else {\n        // Clear color specification based on theme\n        if (this.theme === 'dark') {\n          baseClasses += ' bg-transparent text-white-dark hover:bg-gray-800';\n        } else {\n          baseClasses += ' bg-transparent text-black-force hover:bg-gray-100';\n        }\n      }\n    } else if (this.variant === 'outlined') {\n      // Outlined: Border with user's chosen color, no background\n      if (disabled) {\n        baseClasses += ' border-2 border-gray-300 text-gray-400 bg-transparent';\n      } else {\n        const borderColor = `border-${this.getColorName()}`;\n        const hoverBg = `hover:bg-${this.getColorName()}`;\n        \n        if (this.theme === 'dark') {\n          baseClasses += ` border-2 ${borderColor} bg-transparent text-white-dark ${hoverBg} hover:text-white-force`;\n        } else {\n          baseClasses += ` border-2 ${borderColor} bg-transparent text-black-force ${hoverBg} hover:text-white-force`;\n        }\n      }\n    } else if (this.variant === 'filled') {\n      // Filled: Background with user's chosen color, text color matches theme\n      if (disabled) {\n        baseClasses += ' bg-gray-400 text-white-force';\n      } else {\n        // Filled buttons: black text in light theme, white text in dark theme\n        if (this.theme === 'dark') {\n          baseClasses += ` bg-${this.getColorName()} text-white-force hover:bg-${this.getColorName()}-dark`;\n        } else {\n          baseClasses += ` bg-${this.getColorName()} text-black-force hover:bg-${this.getColorName()}-dark`;\n        }\n      }\n    }\n\n    // Focus ring color matches component color\n    baseClasses += ` focus:ring-${this.getColorName()}`;\n\n    return baseClasses;\n  }\n\n  /** Get value display style */\n  private getValueStyle(): string {\n    const isDisabled = this.state === 'disabled';\n    \n    let classes = 'min-w-[60px] h-12 flex items-center justify-center text-lg font-semibold rounded-lg border-2 number-display';\n    \n    if (isDisabled) {\n      // Disabled state\n      classes += ' bg-gray-100 text-gray-400 border-gray-300 dark:bg-gray-800 dark:text-gray-600 dark:border-gray-600';\n    } else {\n      // Center box: white background with primary color text and border\n      classes += ` bg-white text-${this.getColorName()} border-${this.getColorName()} dark:bg-white dark:text-${this.getColorName()} dark:border-${this.getColorName()}`;\n    }\n\n    return classes;\n  }\n\n  /** Get color name for CSS classes */\n  private getColorName(): string {\n    return this.color === 'primary' ? 'primary' : \n           this.color === 'secondary' ? 'secondary' : 'neutral';\n  }\n\n  /** Render component */\n  render() {\n    const isDisabled = this.state === 'disabled';\n    const isReadOnly = this.mode === 'read';\n    const hoverTitle = isReadOnly ? 'Value cannot be changed (Read-only mode)' : '';\n    const containerClasses = `flex flex-col items-center gap-3 ${isDisabled ? 'opacity-75' : ''}`;\n\n    return (\n      <div class={containerClasses}>\n        {this.label && (\n          <label \n            class={`text-sm font-medium ${this.theme === 'dark' ? 'text-white' : 'text-gray-900'}`}\n            title={hoverTitle}\n          >\n            {this.label}\n            {isReadOnly && (\n              <span class=\"ml-1 text-xs text-blue-500 dark:text-blue-400\">(Read-only)</span>\n            )}\n          </label>\n        )}\n        \n        {isReadOnly ? (\n          // Show value display only for read-only mode\n          <div \n            class=\"flex items-center justify-center min-w-[120px] h-12 px-4 bg-gray-100 dark:bg-gray-700 rounded-lg border border-gray-300 dark:border-gray-600\"\n            title={hoverTitle}\n          >\n            <span class={`text-lg font-medium ${this.theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>\n              {this.currentValue}\n            </span>\n          </div>\n        ) : (\n          // Show interactive number picker\n          <div \n            class=\"flex items-center gap-3\"\n            tabindex={isDisabled ? -1 : 0}\n            onKeyDown={this.handleKeyDown}\n          >\n            {/* Decrement Button */}\n            <button\n              class={this.getButtonStyle('decrement')}\n              onClick={this.handleDecrement}\n              disabled={isDisabled || (this.min !== undefined && this.currentValue <= this.min)}\n              aria-label=\"Decrease value\"\n            >\n              −\n            </button>\n\n            {/* Value Display */}\n            <div class={this.getValueStyle()}>\n              {this.currentValue}\n            </div>\n\n            {/* Increment Button */}\n            <button\n              class={this.getButtonStyle('increment')}\n              onClick={this.handleIncrement}\n              disabled={isDisabled || (this.max !== undefined && this.currentValue >= this.max)}\n              aria-label=\"Increase value\"\n            >\n              +\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/**\n * UI Slider Component Styles\n */\n\n:host {\n  /* Custom color scheme to match ThingsWeb  */\n  --color-neutral: #7E807F;\n  --color-neutral-light: #CACCCC;\n  --color-neutral-dark: #4C4D4C;\n  --color-white: #FFFFFF;\n  --color-primary: #067362;\n  --color-primary-dark: #33b8a4;\n  --color-secondary: #B84A91;\n  \n  display: block;\n  width: 100%;\n}\n\n/* Custom color utilities using CSS variables */\n.bg-neutral-light { background-color: var(--color-neutral-light); }\n.bg-neutral { background-color: var(--color-neutral); }\n.bg-neutral-dark { background-color: var(--color-neutral-dark); }\n.bg-primary { background-color: var(--color-primary); }\n.bg-primary-dark { background-color: var(--color-primary-dark); }\n.bg-secondary { background-color: var(--color-secondary); }\n\n.text-neutral { color: var(--color-neutral); }\n\n/* Neon effects for track */\n.neon-primary-track {\n  background-color: var(--color-primary) !important;\n  border: 1px solid var(--color-primary) !important;\n  box-shadow: \n    0 0 3px rgba(6, 115, 98, 0.6),\n    0 0 8px rgba(6, 115, 98, 0.4),\n    0 0 15px rgba(6, 115, 98, 0.3) !important;\n  filter: brightness(1.1) saturate(1.2);\n}\n\n.neon-secondary-track {\n  background-color: var(--color-secondary) !important;\n  border: 1px solid var(--color-secondary) !important;\n  box-shadow: \n    0 0 3px rgba(184, 74, 145, 0.6),\n    0 0 8px rgba(184, 74, 145, 0.4),\n    0 0 15px rgba(184, 74, 145, 0.3) !important;\n  filter: brightness(1.1) saturate(1.2);\n}\n\n/* Custom slider styles */\ninput[type=\"range\"]::-webkit-slider-thumb {\n  appearance: none;\n  width: 0;\n  height: 0;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n}\n\ninput[type=\"range\"]::-webkit-slider-track {\n  appearance: none;\n  background: transparent;\n  border: none;\n}\n\ninput[type=\"range\"]::-moz-range-thumb {\n  appearance: none;\n  width: 0;\n  height: 0;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n}\n\ninput[type=\"range\"]::-moz-range-track {\n  appearance: none;\n  background: transparent;\n  border: none;\n}\n\n/* Rainbow gradient */\n.bg-gradient-to-r.from-red-500.via-yellow-500.via-green-500.to-blue-500 {\n  background: linear-gradient(to right, #ef4444, #eab308, #22c55e, #3b82f6);\n}\n\n/* Dark mode overrides */\n.dark .bg-neutral-light { background-color: var(--color-neutral-dark); }\n.dark .bg-neutral { background-color: var(--color-neutral); }\n.dark .bg-neutral-dark { background-color: var(--color-neutral-light); }\n.dark .bg-primary { background-color: var(--color-primary-dark); }\n\n.dark .neon-primary-track {\n  background-color: var(--color-primary-dark) !important;\n  border-color: var(--color-primary-dark) !important;\n  box-shadow: \n    0 0 3px rgba(51, 184, 164, 0.7),\n    0 0 8px rgba(51, 184, 164, 0.5),\n    0 0 15px rgba(51, 184, 164, 0.4) !important;\n  filter: brightness(1.2) saturate(1.3);\n}\n\n/* Focus styles */\ninput[type=\"range\"]:focus {\n  outline: none;\n}\n\ninput[type=\"range\"]:focus + div {\n  box-shadow: 0 0 0 3px rgba(6, 115, 98, 0.2);\n}\n","import { Component, Prop, State, h, Watch, Event, EventEmitter } from '@stencil/core';\n\n/**\n * Slider component with various features, multiple visual styles and TD integration.\n * Link a direct property URL for plug-and-play device control.\n * \n * @example Basic Usage\n * ```html\n * <ui-slider variant=\"narrow\" min=\"0\" max=\"100\" value=\"50\" label=\"Brightness\"></ui-slider>\n * ```\n * \n * @example TD Integration\n * ```html\n * <ui-slider \n *   td-url=\"http://plugfest.thingweb.io:80/http-data-schema-thing/properties/brightness\"\n *   min=\"0\" \n *   max=\"100\" \n *   label=\"Device Brightness\"\n *   enable-manual-control=\"true\">\n * </ui-slider>\n * ```\n */\n@Component({\n  tag: 'ui-slider',\n  styleUrl: 'ui-slider.css',\n  shadow: true,\n})\nexport class UiSlider {\n  /**\n   * Visual style variant of the slider.\n   * - narrow: Thin slider track (default)\n   * - wide: Thick slider track\n   * - rainbow: Gradient color track\n   * - neon: Glowing effect\n   * - stepped: Shows step marks\n   */\n  @Prop() variant: 'narrow' | 'wide' | 'rainbow' | 'neon' | 'stepped' = 'narrow';\n\n  /**\n   * Current state of the slider.\n   * - disabled: Slider cannot be clicked or interacted with\n   * - default: Slider is interactive (default)\n   */\n  @Prop({ mutable: true }) state: 'disabled' | 'default' = 'default';\n\n  /**\n   * Theme for the component.\n   */\n  @Prop() theme: 'light' | 'dark' = 'light';\n\n  /**\n   * Color scheme to match thingsweb webpage \n   */\n  @Prop() color: 'primary' | 'secondary' | 'neutral' = 'primary';\n\n  /**\n   * Optional text label, to display text above the slider.\n   */\n  @Prop() label?: string;\n\n  /**\n   * Minimum value of the slider.\n   */\n  @Prop() min: number = 0;\n\n  /**\n   * Maximum value of the slider.\n   */\n  @Prop() max: number = 100;\n\n  /**\n   * Step increment for the slider.\n   */\n  @Prop() step: number = 1;\n\n  /**\n   * Current value of the slider.\n   */\n  @Prop({ mutable: true }) value: number = 0;\n\n  /**\n   * Shape of the slider thumb.\n   * - circle: Round thumb (default)\n   * - square: Square thumb\n   * - arrow: Arrow-shaped thumb pointing right\n   * - triangle: Triangle-shaped thumb\n   * - diamond: Diamond-shaped thumb (<> style)\n   */\n  @Prop() thumbShape: 'circle' | 'square' | 'arrow' | 'triangle' | 'diamond' = 'circle';\n\n  /**\n   * Thing Description URL for device control.\n   */\n  @Prop() tdUrl?: string;\n\n  /**\n   * Enable manual control interface.\n   */\n  @Prop() enableManualControl: boolean = false;\n\n  /** Current value */\n  @State() currentValue: number = 0;\n\n  /** Manual input value */\n  @State() manualInputValue: string = '';\n\n  /** Event emitted when value changes */\n  @Event() valueChange: EventEmitter<{ value: number }>;\n\n  /** Watch for TD URL changes */\n  @Watch('tdUrl')\n  async watchTdUrl() {\n    if (this.tdUrl) {\n      await this.readDevice();\n    }\n  }\n\n  /** Watch for value prop changes */\n  @Watch('value')\n  watchValue() {\n    this.currentValue = this.value;\n    this.manualInputValue = String(this.value);\n  }\n\n  /** Initialize component */\n  async componentWillLoad() {\n    this.currentValue = this.value;\n    this.manualInputValue = String(this.value);\n    if (this.tdUrl) {\n      await this.readDevice();\n    }\n  }\n\n  /** Read from TD device */\n  private async readDevice() {\n    if (!this.tdUrl) return;\n    \n    try {\n      const response = await fetch(this.tdUrl);\n      if (response.ok) {\n        const value = await response.json();\n        const num = Number(value);\n        if (!isNaN(num)) {\n          this.currentValue = Math.max(this.min, Math.min(this.max, num));\n          this.manualInputValue = String(this.currentValue);\n        }\n      }\n    } catch (error) {\n      // Log error but continue with local value\n      console.warn('Device read failed:', error);\n    }\n  }\n\n  /** Write to TD device */\n  private async writeDevice(value: number) {\n    if (!this.tdUrl) return;\n    \n    try {\n      await fetch(this.tdUrl, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(value)\n      });\n    } catch (error) {\n      // Log error but don't interrupt user experience\n      console.warn('Device update failed:', error);\n    }\n  }\n\n  /** Handle slider value change */\n  private async handleChange(event: Event) {\n    if (this.state === 'disabled') return;\n\n    const target = event.target as HTMLInputElement;\n    const newValue = Number(target.value);\n    \n    this.currentValue = newValue;\n    this.manualInputValue = String(newValue);\n    this.valueChange.emit({ value: newValue });\n\n    // Update TD device if URL provided\n    if (this.tdUrl) {\n      this.writeDevice(newValue).catch(() => {\n        // Silently ignore network errors for smooth UX\n      });\n    }\n  }\n\n  /** Handle manual input */\n  private handleManualInput = (event: Event) => {\n    const target = event.target as HTMLInputElement;\n    this.manualInputValue = target.value;\n  };\n\n  /** Handle manual submit */\n  private handleManualSubmit = async (event: Event) => {\n    event.preventDefault();\n    if (this.state === 'disabled') return;\n\n    const newValue = Number(this.manualInputValue);\n    if (isNaN(newValue)) {\n      this.manualInputValue = String(this.currentValue);\n      return;\n    }\n\n    const clampedValue = Math.max(this.min, Math.min(this.max, newValue));\n    \n    this.currentValue = clampedValue;\n    this.manualInputValue = String(clampedValue);\n    this.valueChange.emit({ value: clampedValue });\n\n    // Update TD device if URL provided\n    if (this.tdUrl) {\n      this.writeDevice(clampedValue).catch(() => {\n        // Silently ignore network errors for smooth UX\n      });\n    }\n  };\n\n  /** Handle keyboard navigation */\n  private handleKeyDown = (event: KeyboardEvent) => {\n    if (this.state === 'disabled') return;\n\n    let newValue = this.currentValue;\n    \n    switch (event.key) {\n      case 'ArrowRight':\n      case 'ArrowUp':\n        event.preventDefault();\n        newValue = Math.min(this.max, this.currentValue + this.step);\n        break;\n      case 'ArrowLeft':\n      case 'ArrowDown':\n        event.preventDefault();\n        newValue = Math.max(this.min, this.currentValue - this.step);\n        break;\n      case 'Home':\n        event.preventDefault();\n        newValue = this.min;\n        break;\n      case 'End':\n        event.preventDefault();\n        newValue = this.max;\n        break;\n      case 'PageUp':\n        event.preventDefault();\n        newValue = Math.min(this.max, this.currentValue + this.step * 10);\n        break;\n      case 'PageDown':\n        event.preventDefault();\n        newValue = Math.max(this.min, this.currentValue - this.step * 10);\n        break;\n      default:\n        return;\n    }\n\n    if (newValue !== this.currentValue) {\n      this.currentValue = newValue;\n      this.manualInputValue = String(newValue);\n      this.valueChange.emit({ value: newValue });\n      \n      if (this.tdUrl) {\n        this.writeDevice(newValue).catch(() => {\n          // Silently handle errors in keyboard navigation\n        });\n      }\n    }\n  };\n\n  /** Get track styles */\n  getTrackStyle() {\n    const isDisabled = this.state === 'disabled';\n    const percentage = ((this.currentValue - this.min) / (this.max - this.min)) * 100;\n\n    let height = 'h-2';\n    if (this.variant === 'wide') height = 'h-4';\n    if (this.variant === 'narrow') height = 'h-1';\n\n    let bgColor = 'bg-gray-300';\n    let progressColor = this.getActiveColor();\n\n    if (this.variant === 'rainbow') {\n      bgColor = 'bg-gradient-to-r from-red-500 via-yellow-500 via-green-500 to-blue-500';\n      progressColor = '';\n    } else if (this.variant === 'neon') {\n      bgColor = 'bg-gray-700';\n      progressColor = this.getNeonColor();\n    }\n\n    const disabled = isDisabled ? 'opacity-50 cursor-not-allowed' : '';\n    \n    return {\n      track: `relative w-full ${height} ${bgColor} rounded-full ${disabled}`,\n      progress: `absolute top-0 left-0 ${height} ${progressColor} rounded-full transition-all duration-200`,\n      progressWidth: percentage\n    };\n  }\n\n  /** Get thumb styles */\n  getThumbStyle() {\n    let size = 'w-5 h-5';\n    let shape = 'rounded-full';\n    \n    if (this.thumbShape === 'square') {\n      shape = 'rounded-sm';\n    } else if (this.thumbShape === 'arrow') {\n      size = 'w-8 h-6';\n      shape = '';\n    } else if (this.thumbShape === 'triangle' || this.thumbShape === 'diamond') {\n      size = 'w-6 h-6';\n      shape = '';\n    }\n\n    let bgColor = 'bg-white';\n    const border = 'border border-gray-300';\n\n    // For custom shapes, don't add background and border as they're handled by SVG\n    if (this.thumbShape === 'arrow' || this.thumbShape === 'triangle' || this.thumbShape === 'diamond') {\n      return `${size} cursor-pointer flex items-center justify-center`;\n    }\n\n    return `${size} ${shape} ${bgColor} ${border} cursor-pointer`;\n  }\n\n  /** Fetch current active color */\n  getActiveColor() {\n    if (this.color === 'secondary') return 'bg-secondary';\n    if (this.color === 'neutral') return 'bg-gray-500';\n    return 'bg-primary';\n  }\n\n  /** Fetch current neon color */\n  getNeonColor() {\n    return this.color === 'secondary' ? 'neon-secondary-track' : 'neon-primary-track';\n  }\n\n  /** Render step marks for stepped variant */\n  renderStepMarks() {\n    if (this.variant !== 'stepped') return null;\n\n    const steps = [];\n    const stepCount = (this.max - this.min) / this.step;\n    \n    for (let i = 0; i <= stepCount; i++) {\n      const percentage = (i / stepCount) * 100;\n      steps.push(\n        <div\n          key={i}\n          class=\"absolute w-0.5 h-2 bg-gray-400 transform -translate-x-0.5 top-0\"\n          style={{ left: `${percentage}%` }}\n        ></div>\n      );\n    }\n\n    return <div class=\"absolute inset-0 pointer-events-none\">{steps}</div>;\n  }\n\n  /** Render custom thumb shapes */\n  renderCustomThumb() {\n    if (!['arrow', 'triangle', 'diamond'].includes(this.thumbShape)) return null;\n\n    const thumbColor = this.variant === 'neon' ? '#ffffff' : '#ffffff';\n    const strokeColor = '#374151';\n\n    if (this.thumbShape === 'arrow') {\n      return (\n        <div class=\"absolute inset-0 flex items-center justify-center pointer-events-none\">\n          {/* Left pointing triangle */}\n          <svg \n            width=\"12\" \n            height=\"16\" \n            viewBox=\"0 0 12 16\" \n            class=\"absolute -translate-x-1.5\"\n          >\n            <path \n              d=\"M8 3 L3 8 L8 13 Z\" \n              fill={thumbColor} \n              stroke={strokeColor} \n              stroke-width=\"1\"\n            />\n          </svg>\n          {/* Right pointing triangle */}\n          <svg \n            width=\"12\" \n            height=\"16\" \n            viewBox=\"0 0 12 16\" \n            class=\"absolute translate-x-1.5\"\n          >\n            <path \n              d=\"M4 3 L9 8 L4 13 Z\" \n              fill={thumbColor} \n              stroke={strokeColor} \n              stroke-width=\"1\"\n            />\n          </svg>\n        </div>\n      );\n    }\n\n    if (this.thumbShape === 'triangle') {\n      return (\n        <div class=\"absolute inset-0 flex items-center justify-center pointer-events-none\">\n          <svg \n            width=\"20\" \n            height=\"20\" \n            viewBox=\"0 0 20 20\" \n            class=\"absolute\"\n          >\n            <path \n              d=\"M10 3 L17 15 L3 15 Z\" \n              fill={thumbColor} \n              stroke={strokeColor} \n              stroke-width=\"1\"\n            />\n          </svg>\n        </div>\n      );\n    }\n\n    if (this.thumbShape === 'diamond') {\n      return (\n        <div class=\"absolute inset-0 flex items-center justify-center pointer-events-none\">\n          <svg \n            width=\"20\" \n            height=\"20\" \n            viewBox=\"0 0 20 20\" \n            class=\"absolute\"\n          >\n            <path \n              d=\"M2 10 L10 2 L18 10 L10 18 Z\" \n              fill={thumbColor} \n              stroke={strokeColor} \n              stroke-width=\"1\"\n            />\n          </svg>\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  /** Render final component */\n  render() {\n    const trackStyles = this.getTrackStyle();\n    const thumbStyle = this.getThumbStyle();\n    const isDisabled = this.state === 'disabled';\n\n    return (\n      <div class=\"w-full\">\n        {this.label && (\n          <label\n            class={`block text-sm font-medium mb-4 ${isDisabled ? 'text-gray-400' : ''} ${this.theme === 'dark' ? 'text-white' : 'text-gray-900'}`}\n          >\n            {this.label}\n          </label>\n        )}\n\n        {/* Slider Interface */}\n        <div \n          class=\"relative\"\n          tabindex={isDisabled ? -1 : 0}\n          onKeyDown={this.handleKeyDown}\n          role=\"slider\"\n          aria-valuemin={this.min}\n          aria-valuemax={this.max}\n          aria-valuenow={this.currentValue}\n          aria-disabled={isDisabled ? 'true' : 'false'}\n        >\n          <div class={trackStyles.track}>\n            {this.variant !== 'rainbow' && (\n              <div \n                class={trackStyles.progress}\n                style={{ width: `${trackStyles.progressWidth}%` }}\n              ></div>\n            )}\n            {this.renderStepMarks()}\n          </div>\n          <input\n            type=\"range\"\n            min={this.min}\n            max={this.max}\n            step={this.step}\n            value={this.currentValue}\n            disabled={isDisabled}\n            class={`absolute inset-0 w-full h-full opacity-0 cursor-pointer z-10 ${isDisabled ? 'cursor-not-allowed' : ''}`}\n            onInput={(e) => this.handleChange(e)}\n            onKeyDown={this.handleKeyDown}\n            tabindex={isDisabled ? -1 : 0}\n          />\n          <div\n            class={`absolute top-1/2 transform -translate-y-1/2 -translate-x-1/2 ${thumbStyle} ${isDisabled ? 'opacity-50' : ''} pointer-events-none z-0`}\n            style={{\n              left: `${((this.currentValue - this.min) / (this.max - this.min)) * 100}%`\n            }}\n          >\n            {this.renderCustomThumb()}\n          </div>\n        </div>\n\n        {/* Manual Control Interface */}\n        {this.enableManualControl && (\n          <div class={`mt-4 p-3 border rounded-lg ${this.theme === 'dark' ? 'border-gray-600 bg-gray-800' : 'border-gray-300 bg-gray-50'}`}>\n            <h4 class={`text-sm font-medium mb-2 ${this.theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>\n              Manual Control\n            </h4>\n            <form onSubmit={this.handleManualSubmit} class=\"flex gap-2 items-center\">\n              <input\n                type=\"number\"\n                min={this.min}\n                max={this.max}\n                step={this.step}\n                value={this.manualInputValue}\n                disabled={isDisabled}\n                class={`flex-1 px-2 py-1 text-sm border rounded ${\n                  this.theme === 'dark' \n                    ? 'border-gray-600 bg-gray-700 text-white' \n                    : 'border-gray-300 bg-white text-gray-900'\n                } ${isDisabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n                onInput={this.handleManualInput}\n                placeholder=\"Enter value\"\n              />\n              <button\n                type=\"submit\"\n                disabled={isDisabled}\n                class={`px-3 py-1 text-sm font-medium rounded transition-colors ${\n                  isDisabled \n                    ? 'bg-gray-300 text-gray-500 cursor-not-allowed' \n                    : 'bg-primary text-white hover:bg-primary-dark'\n                }`}\n              >\n                Set\n              </button>\n            </form>\n          </div>\n        )}\n\n        <div class={`flex justify-between text-xs mt-3 ${this.theme === 'dark' ? 'text-gray-300' : 'text-gray-500'}`}>\n          <span>{this.min}</span>\n          <span>{this.currentValue}</span>\n          <span>{this.max}</span>\n        </div>\n      </div>\n    );\n  }\n}\n","@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/**\n * UI Toggle Component Styles\n */\n\n:host {\n  /* Custom color scheme to match ThingsWeb  */\n  --color-neutral: #7E807F;\n  --color-neutral-light: #CACCCC;\n  --color-neutral-dark: #4C4D4C;\n  --color-white: #FFFFFF;\n  --color-primary: #067362;\n  --color-primary-dark: #33b8a4;\n  --color-secondary: #B84A91;\n  \n  display: inline-block;\n}\n\n/* Custom color utilities using CSS variables */\n.bg-neutral-light { background-color: var(--color-neutral-light); }\n.bg-neutral { background-color: var(--color-neutral); }\n.bg-neutral-dark { background-color: var(--color-neutral-dark); }\n.bg-primary { background-color: var(--color-primary); }\n.bg-primary-dark { background-color: var(--color-primary-dark); }\n.bg-secondary { background-color: var(--color-secondary); }\n\n.text-neutral { color: var(--color-neutral); }\n\n/* Disabled state */\n.disabled-state { \n  opacity: 0.5; \n  cursor: not-allowed !important;\n  pointer-events: none;\n}\n\n/* Neon effects */\n.neon-primary {\n  background-color: var(--color-primary) !important;\n  border: 2px solid var(--color-primary) !important;\n  box-shadow: \n    0 0 5px rgba(6, 115, 98, 0.6),\n    0 0 15px rgba(6, 115, 98, 0.5),\n    0 0 25px rgba(6, 115, 98, 0.4),\n    0 0 35px rgba(6, 115, 98, 0.2) !important;\n  filter: brightness(1.1) saturate(1.2);\n}\n\n.neon-primary-track {\n  background-color: var(--color-primary) !important;\n  box-shadow: \n    0 0 3px rgba(6, 115, 98, 0.8),\n    0 0 8px rgba(6, 115, 98, 0.6),\n    0 0 15px rgba(6, 115, 98, 0.4) !important;\n  filter: brightness(1.2) saturate(1.3);\n}\n\n.neon-secondary {\n  background-color: var(--color-secondary) !important;\n  border: 2px solid var(--color-secondary) !important;\n  box-shadow: \n    0 0 5px rgba(184, 74, 145, 0.6),\n    0 0 15px rgba(184, 74, 145, 0.5),\n    0 0 25px rgba(184, 74, 145, 0.4),\n    0 0 35px rgba(184, 74, 145, 0.2) !important;\n  filter: brightness(1.1) saturate(1.2);\n}\n\n.neon-secondary-track {\n  background-color: var(--color-secondary) !important;\n  box-shadow: \n    0 0 3px rgba(184, 74, 145, 0.8),\n    0 0 8px rgba(184, 74, 145, 0.6),\n    0 0 15px rgba(184, 74, 145, 0.4) !important;\n  filter: brightness(1.2) saturate(1.3);\n}\n\n.neon-red {\n  background-color: #ef4444 !important;\n  border: 2px solid #ef4444 !important;\n  box-shadow: \n    0 0 5px rgba(239, 68, 68, 0.6),\n    0 0 15px rgba(239, 68, 68, 0.5),\n    0 0 25px rgba(239, 68, 68, 0.4),\n    0 0 35px rgba(239, 68, 68, 0.2) !important;\n  filter: brightness(1.1) saturate(1.2);\n}\n\n/* Dark mode overrides */\n.dark .bg-neutral-light { background-color: var(--color-neutral-dark); }\n.dark .bg-neutral { background-color: var(--color-neutral); }\n.dark .bg-neutral-dark { background-color: var(--color-neutral-light); }\n.dark .bg-primary { background-color: var(--color-primary-dark); }\n\n.dark .neon-primary {\n  background-color: var(--color-primary-dark) !important;\n  border-color: var(--color-primary-dark) !important;\n  box-shadow: \n    0 0 5px rgba(51, 184, 164, 0.7),\n    0 0 15px rgba(51, 184, 164, 0.6),\n    0 0 25px rgba(51, 184, 164, 0.5),\n    0 0 35px rgba(51, 184, 164, 0.3) !important;\n  filter: brightness(1.2) saturate(1.3);\n}\n\n.dark .neon-red {\n  background-color: #f87171 !important;\n  border-color: #f87171 !important;\n  box-shadow: \n    0 0 5px rgba(248, 113, 113, 0.7),\n    0 0 15px rgba(248, 113, 113, 0.6),\n    0 0 25px rgba(248, 113, 113, 0.5),\n    0 0 35px rgba(248, 113, 113, 0.3) !important;\n  filter: brightness(1.2) saturate(1.3);\n}\n\n\n","import { Component, Prop, State, h, Watch, Event, EventEmitter } from '@stencil/core';\n\n/**\n * Toogle switch component with various fetueres, multiple visual styles and TD integration.\n * Link a direct property URL for plug-and-play device control.\n * \n * @example Basic Usage\n * ```html\n * <ui-toggle variant=\"circle\" state=\"active\" label=\"Light\"></ui-toggle>\n * ```\n * \n * @example TD Integration with HTTP\n * ```html\n * <ui-toggle \n *   td-url=\"http://device.local/properties/power\"\n *   label=\"Smart Light\"\n *   protocol=\"http\"\n *   mode=\"readwrite\">\n * </ui-toggle>\n * ```\n * \n * @example TD Integration with MQTT\n * ```html\n * <ui-toggle \n *   td-url=\"mqtt://device\"\n *   mqtt-host=\"localhost:1883\"\n *   mqtt-topic=\"device/toggle\"\n *   label=\"MQTT Device\"\n *   protocol=\"mqtt\"\n *   mode=\"readwrite\">\n * </ui-toggle>\n * ```\n * \n * @example TD Device Read-Only (shows colored circle)\n * ```html\n * <ui-toggle \n *   td-url=\"http://sensor.local/status\"\n *   label=\"Door Sensor\"\n *   mode=\"read\">\n * </ui-toggle>\n * ```\n * \n * @example Local Control with Custom Handler\n * ```html\n * <ui-toggle \n *   value=\"true\"\n *   on-change=\"myToggleHandler\"\n *   label=\"Custom Toggle\">\n * </ui-toggle>\n * ```\n * \n * @example User's JavaScript Handler\n * ```javascript\n * window.myToggleHandler = function(data) {\n *   console.log('Toggle changed:', data.active);\n *   console.log('New value:', data.value);\n *   console.log('Label:', data.label);\n *   // Your custom logic here\n * };\n * ```\n * \n * @example Event Handling\n * ```javascript\n * document.querySelector('ui-toggle').addEventListener('toggle', (event) => {\n *   console.log('Toggle state:', event.detail.active);\n *   // Your custom logic here\n * });\n * ```\n */\n@Component({\n  tag: 'ui-toggle',\n  styleUrl: 'ui-toggle.css',\n  shadow: true,\n})\nexport class UiToggle {\n  /**\n   * Visual style variant of the toggle.\n   * - circle: Common pill-shaped toggle (default)\n   * - square: Rectangular toggle with square thumb\n   * - apple: iOS-style switch (bigger size, rounded edges)\n   * - cross: Shows × when off, ✓ when on with red background when off and green when on\n   * - neon: Glowing effect when active\n   */\n  @Prop() variant: 'circle' | 'square' | 'apple' | 'cross' | 'neon' = 'circle';\n\n  /**\n   * Current state of the toggle.\n   * - active: Toggle is on/active\n   * - disabled: Toggle cannot be clicked or interacted with\n   * - default: Toggle is off/inactive (default)\n   */\n  @Prop({ mutable: true }) state: 'active' | 'disabled' | 'default' = 'default';\n\n  /**\n   * Theme for the component.\n   */\n  @Prop() theme: 'light' | 'dark' = 'light';\n\n  /**\n   * Color scheme to match thingsweb webpage \n   */\n  @Prop() color: 'primary' | 'secondary' | 'neutral' = 'primary';\n\n  /**\n   * Optional text label, to display text left to the toggle.\n   * When given, clicking the label will also toggle the switch.\n   */\n  @Prop() label?: string;\n\n  /**\n   * Direct URL of TD boolean properties to auto connect and interact with the device.\n   * @example\n   * ```\n   * td-url=\"http://plugfest.thingweb.io:80/http-data-schema-thing/properties/bool\"\n   * ```\n   */\n  @Prop() tdUrl?: string;\n\n  /**\n   * Current value for local control mode (true/false, on/off, 1/0).\n   * When no td-url is provided and value is set, this controls the toggle state.\n   * @example \"true\", \"false\", \"on\", \"off\", \"1\", \"0\"\n   */\n  @Prop({ mutable: true }) value?: string;\n\n  /**\n   * Function name to call when toggle state changes (for local control).\n   * User defines this function in their code, component will invoke it.\n   * @example \"handleMyToggle\"\n   */\n  @Prop() onChange?: string;\n\n  /**\n   * Protocol to use for Thing Description communication.\n   * - http: HTTP REST API (default)\n   * - coap: CoAP protocol  \n   * - mqtt: MQTT protocol\n   */\n  @Prop() protocol: 'http' | 'coap' | 'mqtt' = 'http';\n\n  /**\n   * MQTT broker host for MQTT protocol (e.g., \"localhost:1883\")\n   */\n  @Prop() mqttHost?: string;\n\n  /**\n   * MQTT topic path for MQTT protocol (e.g., \"device/toggle\")\n   */\n  @Prop() mqttTopic?: string;\n\n  /**\n   * Device interaction mode.\n   * - read: Only read from device (display current state as colored circle)\n   * - write: Only write to device (control device but don't sync state)\n   * - readwrite: Read and write (full synchronization) - default\n   */\n  @Prop() mode: 'read' | 'write' | 'readwrite' = 'readwrite';\n\n  /** Internal state tracking if toggle is on/off */\n  @State() isActive: boolean = true;\n\n  /** Event emitted when toggle state changes */\n  @Event() toggle: EventEmitter<{ active: boolean }>;\n\n  /** Watch for TD URL changes and reconnect */\n  @Watch('tdUrl')\n  @Watch('value')\n  async watchTdUrl() {\n    if (this.tdUrl && (this.mode === 'read' || this.mode === 'readwrite')) {\n      await this.readDeviceState();\n    } else if (!this.tdUrl && this.value) {\n      // Handle local value changes\n      const boolValue = this.parseValue(this.value);\n      this.isActive = boolValue;\n    }\n  }\n\n  /** Initialize component */\n  async componentWillLoad() {\n    this.isActive = this.state === 'active';\n    \n    if (this.tdUrl && (this.mode === 'read' || this.mode === 'readwrite')) {\n      await this.readDeviceState();\n    } else if (!this.tdUrl && this.value) {\n      // Initialize from value prop when no TD URL\n      const boolValue = this.parseValue(this.value);\n      this.isActive = boolValue;\n    }\n  }\n\n  /** Parse string value to boolean */\n  private parseValue(value: string): boolean {\n    const lowerValue = value.toLowerCase();\n    return lowerValue === 'true' || lowerValue === '1' || lowerValue === 'on' || lowerValue === 'yes';\n  }\n\n  /** Read current state from device */\n  private async readDeviceState() {\n    if (!this.tdUrl) return;\n\n    try {\n      console.log(`Reading from: ${this.tdUrl} via ${this.protocol}`);\n      \n      if (this.protocol === 'http') {\n        await this.readDeviceStateHttp();\n      } else if (this.protocol === 'coap') {\n        await this.readDeviceStateCoap();\n      } else if (this.protocol === 'mqtt') {\n        await this.readDeviceStateMqtt();\n      }\n    } catch (error) {\n      console.warn('Failed to read state:', error);\n    }\n  }\n\n  /** Read via HTTP */\n  private async readDeviceStateHttp() {\n    const response = await fetch(this.tdUrl);\n    \n    if (response.ok) {\n      const value = await response.json();\n      const booleanValue = typeof value === 'boolean' ? value : Boolean(value);\n      \n      this.isActive = booleanValue;\n      console.log(`Read value: ${booleanValue}`);\n    }\n  }\n\n  /** Read via CoAP */\n  private async readDeviceStateCoap() {\n    try {\n      // Simple CoAP GET request\n      const url = new URL(this.tdUrl);\n      const response = await fetch(`coap://${url.host}${url.pathname}`, {\n        method: 'GET'\n      });\n      const value = await response.json();\n      const booleanValue = typeof value === 'boolean' ? value : Boolean(value);\n      this.isActive = booleanValue;\n      console.log(`CoAP read value: ${booleanValue}`);\n    } catch (error) {\n      console.warn('CoAP read failed:', error);\n      throw error;\n    }\n  }\n\n  /** Read via MQTT */\n  private async readDeviceStateMqtt() {\n    if (!this.mqttHost || !this.mqttTopic) {\n      console.warn('MQTT host and topic are required for MQTT protocol');\n      return;\n    }\n\n    try {\n      // Use WebSocket-based MQTT connection\n      const wsUrl = `ws://${this.mqttHost}/mqtt`;\n      const ws = new WebSocket(wsUrl);\n      \n      ws.onopen = () => {\n        // Subscribe to topic\n        const subscribeMsg = {\n          cmd: 'subscribe',\n          topic: this.mqttTopic\n        };\n        ws.send(JSON.stringify(subscribeMsg));\n      };\n      \n      ws.onmessage = (event) => {\n        const data = JSON.parse(event.data);\n        if (data.topic === this.mqttTopic) {\n          const booleanValue = typeof data.payload === 'boolean' ? data.payload : Boolean(data.payload);\n          this.isActive = booleanValue;\n          console.log(`MQTT read value: ${booleanValue}`);\n        }\n      };\n    } catch (error) {\n      console.warn('MQTT read failed:', error);\n      throw error;\n    }\n  }\n\n  /** Write new state to TD device */\n  private async updateDevice(value: boolean) {\n    if (!this.tdUrl) return;\n\n    try {\n      console.log(`Writing ${value} to: ${this.tdUrl} via ${this.protocol}`);\n      \n      if (this.protocol === 'http') {\n        await this.updateDeviceHttp(value);\n      } else if (this.protocol === 'coap') {\n        await this.updateDeviceCoap(value);\n      } else if (this.protocol === 'mqtt') {\n        await this.updateDeviceMqtt(value);\n      }\n    } catch (error) {\n      console.warn('Failed to write:', error);\n      throw error;\n    }\n  }\n\n  /** Write via HTTP */\n  private async updateDeviceHttp(value: boolean) {\n    const response = await fetch(this.tdUrl, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(value),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Write failed: ${response.status}`);\n    }\n    \n    console.log(`Successfully wrote: ${value}`);\n  }\n\n  /** Write via CoAP */\n  private async updateDeviceCoap(value: boolean) {\n    try {\n      const url = new URL(this.tdUrl);\n      const response = await fetch(`coap://${url.host}${url.pathname}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(value),\n      });\n\n      if (!response.ok) {\n        throw new Error(`CoAP write failed: ${response.status}`);\n      }\n      \n      console.log(`CoAP successfully wrote: ${value}`);\n    } catch (error) {\n      console.warn('CoAP write failed:', error);\n      throw error;\n    }\n  }\n\n  /** Write via MQTT */\n  private async updateDeviceMqtt(value: boolean) {\n    if (!this.mqttHost || !this.mqttTopic) {\n      console.warn('MQTT host and topic are required for MQTT protocol');\n      throw new Error('MQTT configuration missing');\n    }\n\n    try {\n      // Use WebSocket-based MQTT connection\n      const wsUrl = `ws://${this.mqttHost}/mqtt`;\n      const ws = new WebSocket(wsUrl);\n      \n      ws.onopen = () => {\n        // Publish to topic\n        const publishMsg = {\n          cmd: 'publish',\n          topic: this.mqttTopic,\n          payload: value\n        };\n        ws.send(JSON.stringify(publishMsg));\n        console.log(`MQTT successfully wrote: ${value}`);\n        ws.close();\n      };\n      \n      ws.onerror = (error) => {\n        console.warn('MQTT write failed:', error);\n        throw new Error('MQTT write failed');\n      };\n    } catch (error) {\n      console.warn('MQTT write failed:', error);\n      throw error;\n    }\n  }\n\n  /** Toggle click handle */\n  private async handleToggle() {\n    if (this.state === 'disabled') return;\n    \n    // Don't allow interaction in read-only mode (applies to both TD URL and local control)\n    if (this.mode === 'read') {\n      return;\n    }\n\n    const newActive = !this.isActive;\n    this.isActive = newActive;\n\n    // Emit toggle event for parent to handle\n    this.toggle.emit({ active: newActive });\n\n    // Call user's onChangeFunction if provided\n    if (this.onChange && typeof window[this.onChange] === 'function') {\n      window[this.onChange]({\n        active: newActive,\n        value: newActive ? 'true' : 'false',\n        label: this.label\n      });\n    }\n\n    // Update value prop for local control\n    if (!this.tdUrl && this.value !== undefined) {\n      this.value = newActive ? 'true' : 'false';\n    }\n\n    // Update device if connected and write mode is enabled\n    if (this.tdUrl && (this.mode === 'write' || this.mode === 'readwrite')) {\n      try {\n        await this.updateDevice(newActive);\n      } catch (error) {\n        // Revert on failure\n        this.isActive = !newActive;\n        console.warn('Change failed, reverted state');\n        // Emit revert event\n        this.toggle.emit({ active: !newActive });\n      }\n    }\n  }\n\n  /** Handle keyboard 'enter' and 'spacebar' input to toggle switch state */\n  private handleKeyDown = (event: KeyboardEvent) => {\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.preventDefault();\n      this.handleToggle();\n    }\n  };\n\n  /** Fetch current toggle background style */\n  getToggleStyle() {\n    const isDisabled = this.state === 'disabled';\n    const isActive = this.isActive;\n    \n    // Bigger sixe for apple variant\n    const size = this.variant === 'apple' ? 'w-11 h-7' : 'w-12 h-6';\n\n    // Different shapes of thumb\n    let shape = 'rounded-full';\n    if (this.variant === 'square') shape = 'rounded-md';\n    if (this.variant === 'apple') shape = 'rounded-full shadow-inner border-2 border-gray-500';\n\n    // Background color\n    let bgColor = 'bg-gray-300';\n    \n    if (this.color === 'neutral') {\n      bgColor = isActive ? 'bg-gray-500' : 'bg-gray-300';\n    } else if (this.variant === 'cross') {\n      bgColor = isActive ? this.getActiveColor() : 'bg-red-500';\n    } else if (this.variant === 'apple') {\n      bgColor = isActive ? 'bg-green-500' : 'bg-gray-700';\n    } else if (this.variant === 'neon') {\n      bgColor = isActive ? this.getNeonColor() : 'neon-red';\n    } else if (isActive) {\n      bgColor = this.getActiveColor();\n    }\n\n    const disabled = isDisabled ? 'disabled-state' : '';\n    const base = 'relative inline-block cursor-pointer transition-all duration-300 ease-in-out';\n\n    return `${base} ${size} ${shape} ${bgColor} ${disabled}`.trim();\n  }\n\n  /** Fetch current active color */\n  getActiveColor() {\n    if (this.color === 'secondary') return 'bg-secondary';\n    if (this.color === 'neutral') return 'bg-gray-500';\n    return 'bg-primary';\n  }\n\n  /** Fetch current neon color */\n  getNeonColor() {\n    return this.color === 'secondary' ? 'neon-secondary' : 'neon-primary';\n  }\n\n  /** Fetch current thumb style */\n  getThumbStyle() {\n    const isActive = this.isActive;\n    \n    // Apple variant\n    if (this.variant === 'apple') {\n      const baseStyle = 'absolute w-6 h-6 bg-white transition-all duration-200 ease-in-out shadow-md rounded-full top-0 left-0';\n      const movement = isActive ? 'translate-x-4' : 'translate-x-0';\n      return `${baseStyle} ${movement}`;\n    }\n    \n    // Standard thumb\n    const baseStyle = 'absolute w-4 h-4 bg-white transition-transform duration-300 ease-in-out shadow-sm';\n    const shape = this.variant === 'square' ? 'rounded-sm' : 'rounded-full';\n    \n    let position = 'top-1 left-1';\n    if (this.variant === 'neon') {\n      position = 'top-0.5 left-1';\n    }\n    \n    const movement = isActive ? 'translate-x-6' : 'translate-x-0';\n    \n    return `${baseStyle} ${shape} ${position} ${movement}`;\n  }\n\n  /** Tick and cross icons for cross variant */\n  showCrossIcons() {\n    if (this.variant !== 'cross') return null;\n    \n    const isActive = this.isActive;\n    \n    return (\n      <div class=\"absolute inset-0 flex items-center justify-center pointer-events-none\">\n        {!isActive ? (\n          <div class=\"absolute top-0 right-0 w-6 h-6 flex items-center justify-center\">\n            <span class=\"text-white text-xl font-bold\">×</span>\n          </div>\n        ) : (\n          <div class=\"absolute top-0 left-0 w-6 h-6 flex items-center justify-center\">\n            <span class=\"text-white text-lg font-bold\">✓</span>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  /** Render final component */\n  render() {\n    const toggleStyle = this.getToggleStyle();\n    const thumbStyle = this.getThumbStyle();\n    const isDisabled = this.state === 'disabled';\n    const isReadOnly = this.mode === 'read';\n    const hoverTitle = isReadOnly ? 'Value cannot be changed (Read-only mode)' : '';\n\n    return (\n      <div class=\"inline-flex items-center space-x-3\">\n        {this.label && (\n          <label\n            class={`select-none mr-2 ${isDisabled || isReadOnly ? 'cursor-not-allowed text-gray-400' : 'cursor-pointer'} ${this.theme === 'dark' ? 'text-white' : 'text-gray-900'}`}\n            onClick={() => !isDisabled && !isReadOnly && this.handleToggle()}\n            title={hoverTitle}\n          >\n            {this.label}\n          </label>\n        )}\n        \n        {isReadOnly ? (\n          // Show colored circle for read-only mode\n          <span \n            class={`inline-block w-6 h-6 rounded-full ${this.isActive ? 'bg-green-500' : 'bg-red-500'}`}\n            title={hoverTitle}\n          ></span>\n        ) : (\n\n          <span\n            class={toggleStyle}\n            role=\"switch\"\n            aria-checked={this.isActive ? 'true' : 'false'}\n            aria-disabled={isDisabled ? 'true' : 'false'}\n            tabindex={isDisabled ? -1 : 0}\n            onClick={() => !isDisabled && this.handleToggle()}\n            onKeyDown={this.handleKeyDown}\n          >\n            <span class={thumbStyle}></span>\n            {this.showCrossIcons()}\n          </span>\n        )}\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}