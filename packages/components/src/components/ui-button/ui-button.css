@import url('../../global/theme.css');
@tailwind base;
@tailwind components;
@tailwind utilities;

/**
 * UI Button Component Styles
 */

:host { display: inline-block; }

/* Custom color utilities using CSS variables */
/* color utility classes provided globally (theme.css) retained here only if component-specific overrides needed */

/* text color utilities now global */

.border-primary { border-color: var(--color-primary); }
.border-secondary { border-color: var(--color-secondary); }
/* border utilities now global */

/* Dark mode text and border colors */
.dark .text-primary { color: var(--color-primary-dark); }
.dark .border-primary { border-color: var(--color-primary-dark); }
.dark .text-secondary { color: var(--color-secondary); }
.dark .border-secondary { border-color: var(--color-secondary); }
.dark .text-neutral { color: var(--color-neutral); }
.dark .border-neutral { border-color: var(--color-neutral); }

.focus\:ring-primary:focus { 
  --tw-ring-color: var(--color-primary); 
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-secondary:focus { 
  --tw-ring-color: var(--color-secondary); 
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-neutral:focus { 
  --tw-ring-color: var(--color-neutral); 
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

/* Hover states for colored buttons */
.hover\:bg-primary:hover { background-color: var(--color-primary); }
.hover\:bg-primary-dark:hover { background-color: var(--color-primary-dark); }
.hover\:bg-secondary:hover { background-color: var(--color-secondary); }
.hover\:bg-neutral:hover { background-color: var(--color-neutral); }

/* Additional hover and focus utilities */
.hover\:text-white:hover { color: white; }
.focus\:ring-primary:focus { --tw-ring-color: var(--color-primary); }
.focus\:ring-secondary:focus { --tw-ring-color: var(--color-secondary); }
.focus\:ring-neutral:focus { --tw-ring-color: var(--color-neutral); }

/* Force white text for filled buttons - highest specificity */
button.text-white-force,
button.text-white-force:hover,
button.text-white-force:active,
button.text-white-force:focus {
  color: white !important;
}

/* Force black text in light theme - highest specificity */
button.text-black-force,
button.text-black-force:hover,
button.text-black-force:active,
button.text-black-force:focus {
  color: black !important;
}

/* Force white text in dark theme - highest specificity */
button.text-white-dark,
button.text-white-dark:hover,
button.text-white-dark:active,
button.text-white-dark:focus {
  color: white !important;
}

/* Extra specificity for filled variant buttons */
:host(.ui-button) button.text-white-force {
  color: white !important;
}

/* Dark mode overrides */
.dark .bg-neutral-light { background-color: var(--color-neutral-dark); }
.dark .bg-neutral { background-color: var(--color-neutral); }
.dark .bg-neutral-dark { background-color: var(--color-neutral-light); }
.dark .bg-primary { background-color: var(--color-primary-dark); }

/* Button animations */
.hover\:scale-105:hover {
  transform: scale(1.05);
}

.active\:scale-95:active {
  transform: scale(0.95);
}

/* Disabled state */
button:disabled {
  cursor: not-allowed !important;
  transform: none !important;
}

button:disabled:hover {
  transform: none !important;
}

/* Smooth transitions */
button {
  transition: all 0.2s ease-in-out;
}

/* Focus styles */
button:focus {
  outline: none;
  --tw-ring-width: 2px;
  --tw-ring-offset-width: 2px;
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

/* Ensure all elements use Josefin Sans */
button, div, label, span {
  font-family: 'Josefin Sans', sans-serif;
}
