{"version":3,"file":"status-indicator.js","sourceRoot":"","sources":["../../../../../../../../../ui-wot fin/packages/components/src/utils/status-indicator.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Visual Badges for feedback, It shows operation status in UI components\n */\n\nexport type OperationStatus = 'idle' | 'loading' | 'success' | 'error';\n\nexport class StatusIndicator {\n  /** CSS classes for status indicator with fixed position to reserves space */\n  static getStatusClasses(status: OperationStatus): string {\n    const base = 'ml-2 inline-flex items-center justify-center self-center w-5 h-5 min-w-[1.25rem] transition-all duration-300';\n\n    if (status === 'idle') return `${base} opacity-0`;\n    if (status === 'loading') return `${base} opacity-100`;\n    if (status === 'success') return `${base} opacity-100 rounded-full bg-green-500 text-white`;\n    if (status === 'error') return `${base} opacity-100 rounded-full bg-red-500 text-white`;\n\n    return `${base} opacity-0`;\n  }\n\n  /** Apply status with auto-clear timers */\n  static applyStatus(target: any, status: OperationStatus, errorMessage?: string) {\n    if (!target) return;\n\n    target.operationStatus = status;\n\n    if (status === 'error') {\n      target.lastError = errorMessage;\n      setTimeout(() => {\n        if (target.operationStatus === 'error') {\n          target.operationStatus = 'idle';\n          target.lastError = undefined;\n        }\n      }, 3000);\n    } else if (status === 'success') {\n      target.lastError = undefined;\n      target.lastUpdatedTs = Date.now();\n      setTimeout(() => {\n        if (target.operationStatus === 'success') target.operationStatus = 'idle';\n      }, 1200);\n    } else if (status === 'idle') {\n      target.lastError = undefined;\n    }\n  }\n\n  /** Format timestamp and relative time for last updated */\n  static formatTimestamp(date: Date): { full: string; relative: string } {\n    const diffMs = Date.now() - date.getTime();\n    const diffMinutes = Math.floor(diffMs / 60000);\n    const diffHours = Math.floor(diffMs / 3600000);\n    const diffDays = Math.floor(diffMs / 86400000);\n\n    const full = `Last updated: ${date.toLocaleString()}`;\n\n    let relative: string;\n    if (diffMinutes < 1) relative = '(Just Now)';\n    else if (diffMinutes < 60) relative = `(${diffMinutes}m ago)`;\n    else if (diffHours < 24) relative = `(${diffHours}h ago)`;\n    else if (diffDays < 7) relative = `(${diffDays}d ago)`;\n    else relative = '(1w+ ago)';\n\n    return { full, relative };\n  }\n\n  /** Complete render of status badge */\n  static renderStatusBadge(status: OperationStatus, error?: string, h?: any): any {\n    if (!h) return null;\n    const classes = this.getStatusClasses(status);\n\n    if (status === 'loading') {\n      return h('span', { class: classes, title: 'Operation in progress...', innerHTML: this.loadingSVG() });\n    }\n\n    if (status === 'success') {\n      return h('span', { class: classes, title: 'Operation completed successfully' }, this.successSVG(h));\n    }\n\n    if (status === 'error') {\n      return h('span', { class: classes, title: error || 'Operation failed' }, this.errorSVG(h));\n    }\n    // Return empty span to reserve space and prevent layout shift\n    return h('span', { class: classes, title: '' });\n  }\n\n  /** Render timestamp with auto-updating relative time */\n  static renderTimestamp(lastUpdated: Date | null, theme: 'light' | 'dark', h?: any): any {\n    if (!h) return null;\n\n    const classes = `mt-2 text-xs font-mono ${theme === 'dark' ? 'text-gray-400' : 'text-gray-500'}`;\n\n    if (lastUpdated) {\n      const { full, relative } = this.formatTimestamp(lastUpdated);\n      return h('div', { class: `${classes} timestamp space-y-1` }, [h('div', { class: 'last-updated' }, full), h('div', { class: 'relative-time italic opacity-75' }, relative)]);\n    }\n    // No timestamp: render invisible placeholders to reserve space and prevent layout shift\n    const sample = this.formatTimestamp(new Date());\n    return h('div', { class: `${classes} timestamp space-y-1` }, [\n      h('div', { 'class': 'last-updated opacity-0', 'aria-hidden': 'true' }, sample.full),\n      h('div', { 'class': 'relative-time italic opacity-0', 'aria-hidden': 'true' }, sample.relative),\n    ]);\n  }\n\n  // ====================== SVG Icons =====================\n\n  /** Success checkmark SVG */\n  private static successSVG(h: any): any {\n    return h(\n      'svg',\n      {\n        'viewBox': '0 0 16 16',\n        'class': 'w-3 h-3',\n        'fill': 'none',\n        'stroke': 'currentColor',\n        'stroke-width': '3',\n        'stroke-linecap': 'round',\n        'stroke-linejoin': 'round',\n      },\n      [h('path', { d: 'M3 8.5l3.5 3.5L13 5' })],\n    );\n  }\n\n  /** Error cross mark SVG */\n  private static errorSVG(h: any): any {\n    return h(\n      'svg',\n      {\n        'viewBox': '0 0 16 16',\n        'class': 'w-3 h-3',\n        'fill': 'none',\n        'stroke': 'currentColor',\n        'stroke-width': '3',\n        'stroke-linecap': 'round',\n        'stroke-linejoin': 'round',\n      },\n      [h('path', { d: 'M4 4l8 8' }), h('path', { d: 'M12 4l-8 8' })],\n    );\n  }\n\n  /** Loading spinner SVG */\n  private static loadingSVG(): string {\n    return `<svg class=\"w-4 h-4 text-blue-500\" viewBox=\"0 0 24 24\" style=\"animation: spin 1s linear infinite;\">\n      <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\" fill=\"none\" opacity=\"0.25\" />\n      <path d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" fill=\"currentColor\" />\n    </svg>`;\n  }\n}\n"]}